{
  "name": "fraud-card",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/UIStudio/fraud-card.tsx",
      "content": "\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { TbCircleDotted } from \"react-icons/tb\";\nimport { RxCross2 } from \"react-icons/rx\";\nimport { GoDotFill } from \"react-icons/go\";\nimport { motion, Variants } from \"motion/react\";\nimport { useState } from \"react\";\n\ntype BlockedEmail = {\n  email: string;\n  time: string;\n};\n\ntype FraudCardProps = {\n  blockedEmails: BlockedEmail[];\n};\n\nconst FraudCard = ({ blockedEmails }: FraudCardProps) => {\n  const [hovered, setHovered] = useState(false);\n\n  const parentvariant = {\n    open: {\n      transition: {\n        staggerChildren: 0.08,\n        delayChildren: 0.15,\n      },\n    },\n    close: {\n      transition: {\n        staggerChildren: 0.075,\n        delayChildren: 0.15,\n      },\n    },\n  };\n\n  const emailvariant = {\n    open: {\n      opacity: 1,\n      filter: \"blur(0px)\",\n      y: 0,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      filter: \"blur(10px)\",\n      y: 5,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const iconvariant = {\n    open: {\n      opacity: 1,\n      scale: 1,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      scale: 0.85,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const timevariant = {\n    open: {\n      opacity: 1,\n      filter: \"blur(0px)\",\n      y: 0,\n      transition: { duration: 0.3 },\n    },\n    close: {\n      opacity: 0,\n      filter: \"blur(5px)\",\n      y: 10,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const circlevariant: Variants = {\n    open: {\n      rotate: 360,\n      transition: {\n        ease: \"linear\",\n        duration: 2.5,\n        repeat: Number.POSITIVE_INFINITY,\n      },\n    },\n    close: {\n      rotate: 0,\n      transition: {\n        ease: \"easeInOut\",\n        duration: 0.1,\n        repeat: 0,\n      },\n    },\n  };\n\n  return (\n    <motion.div\n      onClick={() => setHovered((prev) => !prev)}\n      onHoverStart={() => setHovered(true)}\n      onHoverEnd={() => setHovered(false)}\n      variants={parentvariant}\n      animate={hovered ? \"open\" : \"close\"}\n      initial=\"close\"\n      className={cn(\n        \"h-[34rem] min-h-[34rem] w-[350px] max-w-[350px]\",\n        \"group overflow-hidden border shadow-md\",\n        \"clbeam-container relative flex flex-col items-center\",\n        \"rounded-md bg-neutral-50 text-white dark:bg-neutral-900\",\n      )}\n    >\n      <div className={cn(\"flex flex-col gap-2 px-4 pt-4\")}> \n        <h2 className=\"text-[14px] font-bold text-primary\">\n          Email Security Enhancements\n        </h2>\n        <p className=\"text-[11px] text-neutral-500 sm:text-xs\">\n          Improve account integrity and reduce fake registrations by identifying\n          temporary inboxes and filtering suspicious patterns in email addresses\n          used.\n        </p>\n      </div>\n      <div className=\"relative flex h-full w-[300px] flex-col\">\n        <div className=\"mt-8 py-3\">\n          <div className=\"relative z-[10] flex items-center justify-center gap-2 rounded-[6px] bg-neutral-50 p-0.5 shadow-md dark:bg-black\">\n            <div className=\"flex h-full w-full items-center justify-between gap-3 rounded-[4px] bg-neutral-100 p-3 dark:bg-neutral-800\">\n              <div className=\"flex items-center justify-center gap-4\">\n                <motion.div variants={circlevariant} className=\"h-4 w-4\">\n                  <TbCircleDotted className=\"h-full w-full text-primary\" />\n                </motion.div>\n                <p className=\"font-mono text-[10px] text-neutral-600 transition-all duration-300 group-hover:text-neutral-900 dark:text-neutral-400 dark:group-hover:text-neutral-100\">\n                  Malicious email activity flagged\n                </p>\n              </div>\n              <p className=\"text-[10px] text-neutral-500\">\n                {new Date().toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  hour12: false,\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute inset-0 h-full w-full\">\n          <svg\n            className=\"h-full w-full stroke-current text-neutral-400 dark:text-neutral-700\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 52 50\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g strokeWidth=\"0.1\">\n              <path d=\"M 3.7 0 v 5.8 l 6.7 5.9 v 60\" />\n            </g>\n            <g mask=\"url(#clbeam-mask-1)\">\n              <circle\n                className=\"clbeam clbeam-line-1\"\n                cx=\"0\"\n                cy=\"0\"\n                r=\"12\"\n                fill=\"url(#clbeam-red-grad)\"\n              />\n            </g>\n            <defs>\n              <mask id=\"clbeam-mask-1\">\n                <path\n                  d=\"M 3.7 0 v 5.8 l 6.7 5.9 v 60\"\n                  stroke=\"white\"\n                  strokeWidth=\"0.15\"\n                />\n              </mask>\n              <radialGradient id=\"clbeam-red-grad\" fx=\"1\">\n                <stop offset=\"0%\" stopColor=\"#ef4444\" />\n                <stop offset=\"100%\" stopColor=\"transparent\" />\n              </radialGradient>\n            </defs>\n          </svg>\n        </div>\n        <div className=\"absolute inset-x-12 top-[130px] flex w-fit flex-col items-center justify-center\">\n          <div className=\"flex h-full w-full flex-col items-center justify-center gap-9\">\n            {blockedEmails.map(({ email, time }) => (\n              <div key={email} className=\"flex h-full w-full justify-start\">\n                <div className=\"relative mr-2 mt-1.5 h-6 w-6\">\n                  <div className=\"absolute inset-0 flex items-center justify-center rounded-full bg-black/10 dark:bg-white/10\">\n                    <GoDotFill className=\"h-2.5 w-2.5 text-neutral-400 dark:text-neutral-500\" />\n                  </div>\n                  <motion.div\n                    variants={iconvariant}\n                    className=\"absolute inset-0 flex items-center justify-center rounded-full bg-red-500 p-1\"\n                  >\n                    <RxCross2 className=\"h-4 w-4 text-neutral-100 dark:text-neutral-800\" />\n                  </motion.div>\n                </div>\n                <div className=\"flex flex-col items-start justify-center gap-1 p-1\">\n                  <motion.h2\n                    variants={emailvariant}\n                    className=\"text-[10px] font-semibold text-neutral-800 dark:text-neutral-200 sm:text-xs\"\n                  >\n                    {email}\n                  </motion.h2>\n                  <motion.p\n                    variants={timevariant}\n                    className=\"font-mono text-[9px] text-neutral-500\"\n                  >\n                    Blocked {time}\n                  </motion.p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default FraudCard;",
      "type": "registry:ui",
      "target": "components/UIStudio/fraud-card.tsx"
    }
  ],
  "author": "shivashanker <hi@shivashanker.com/projects>",
  "title": "Fraud Card"
}
