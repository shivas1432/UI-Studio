{
  "name": "animated-otp",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/UIStudio/animated-otp.tsx",
      "content": "\"use client\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst digits = [\"4\", \"8\", \"3\", \"1\", \"9\", \"7\"];\n\ntype AnimatedOTPProps = {\n  delay?: number;\n  cardTitle?: string;\n  cardDescription?: string;\n};\n\nconst AnimatedOTP = ({\n  delay = 3500,\n  cardTitle = \"Secure Access\",\n  cardDescription = \"Protect accounts with a one-time password, auto-applied during every user login for enhanced security.\"\n}: AnimatedOTPProps) => {\n  const [animationKey, setAnimationKey] = useState(0);\n  const delayTime = Math.max(delay, 3500);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnimationKey((prev) => prev + 1);\n    }, delayTime);\n\n    return () => clearInterval(interval);\n  }, [delayTime]);\n\n  return (\n    <OTPinput\n      key={animationKey}\n      cardTitle={cardTitle}\n      cardDescription={cardDescription}\n    />\n  );\n};\n\nexport default AnimatedOTP;\n\nconst OTPinput = ({ cardTitle, cardDescription }: AnimatedOTPProps) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [fadeOut, setFadeOut] = useState(false);\n\n  useEffect(() => {\n    if (activeIndex > digits.length - 1) return;\n\n    const interval = setInterval(() => {\n      setActiveIndex((prev) => prev + 1);\n    }, 400);\n\n    if (activeIndex === digits.length - 1) {\n      setTimeout(() => {\n        setFadeOut(true);\n      }, 450);\n    }\n\n    return () => clearInterval(interval);\n  }, [activeIndex]);\n\n  return (\n    <div\n      className={cn(\n        \"relative\",\n        \"flex items-center justify-center\",\n        \"h-[14rem] w-full max-w-[350px]\",\n        \"rounded-md border bg-neutral-50 dark:bg-neutral-900\",\n        \"shadow-[0_3px_10px_rgb(0,0,0,0.2)]\"\n      )}\n    >\n      <div className=\"absolute left-1/2 top-[25%] -translate-x-1/2\">\n        <div className=\"flex w-full items-center justify-center gap-3\">\n          {digits.map((digit, idx) => (\n            <div\n              key={idx}\n              className={cn(\n                \"relative flex h-10 w-8 cursor-default items-center justify-center rounded-md bg-gradient-to-br from-neutral-100 to-neutral-50 text-primary dark:from-neutral-800 dark:to-neutral-800\",\n                \"shadow-[0_3px_10px_rgb(0,0,0,0.2)]\"\n              )}\n            >\n              <motion.div\n                className=\"absolute inset-0 rounded-md border border-cyan-400\"\n                initial={{\n                  opacity: 0,\n                  scale: 1,\n                  filter: \"blur(0px)\"\n                }}\n                animate={{\n                  opacity: [0, 1, 0],\n                  scale: [0.85, 1.3],\n                  filter: \"blur(2px)\"\n                }}\n                transition={{\n                  duration: 0.5,\n                  ease: \"easeInOut\",\n                  delay: 2.25\n                }}\n                style={{\n                  boxShadow: \"inset 0 0 12px rgba(34, 211, 238, 0.5)\"\n                }}\n              />\n              {activeIndex === idx && (\n                <motion.div\n                  key={idx}\n                  layoutId=\"glow\"\n                  className=\"absolute inset-0 rounded-md border border-cyan-400\"\n                  initial={idx === 0 ? { opacity: 0, scale: 1.7 } : { scale: 1.7 }}\n                  animate={idx === 0 ? { opacity: 1, scale: 1 } : { scale: 1 }}\n                  transition={{\n                    type: \"spring\",\n                    stiffness: 500,\n                    damping: 30\n                  }}\n                  style={{\n                    boxShadow: \"inset 0 0 12px rgba(34, 211, 238, 0.6)\"\n                  }}\n                >\n                  <svg\n                    viewBox=\"0 0 20 20\"\n                    className=\"absolute inset-0 h-full w-full\"\n                    strokeWidth=\"0.4\"\n                  >\n                    <path\n                      d=\"M 3 19 h 14\"\n                      className=\"stroke-cyan-400 dark:stroke-cyan-500\"\n                    />\n                  </svg>\n                </motion.div>\n              )}\n              <motion.span\n                initial={{ opacity: 0 }}\n                animate={{ opacity: fadeOut ? 0 : 1 }}\n                transition={{\n                  duration: fadeOut ? 0.2 : 0.3,\n                  ease: \"easeInOut\",\n                  delay: fadeOut ? 0 : idx * 0.43\n                }}\n                className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\"\n              >\n                {digit}\n              </motion.span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"absolute bottom-4 left-0 w-full px-3\">\n        <h3 className=\"text-sm font-semibold text-primary\">{cardTitle}</h3>\n        <p className=\"mt-2 text-xs text-neutral-600 dark:text-neutral-400\">\n          {cardDescription}\n        </p>\n      </div>\n    </div>\n  );\n};",
      "type": "registry:ui",
      "target": "components/UIStudio/animated-otp.tsx"
    }
  ],
  "author": "shivashanker <hi@shivashanker.com/projects>",
  "title": "Animated OTP"
}
