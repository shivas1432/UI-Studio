{
  "name": "expandable-card",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/UIStudio/expandable-card.tsx",
      "content": "\"use client\";\n\nimport type React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport type { SVGProps } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface CardItem {\n  id: string;\n  title: string;\n  subtitle: string;\n  icon: React.ReactNode;\n  description: string;\n  details: string;\n  metadata: string;\n}\n\nexport interface ExpandableCardProps {\n  items: CardItem[];\n  className?: string;\n}\n\nexport default function ExpandableCard({\n  items,\n  className,\n}: ExpandableCardProps) {\n  const [current, setCurrent] = useState<CardItem | null>(null);\n  const ref = useOutsideClick(() => setCurrent(null));\n\n  return (\n    <div className=\"\">\n      <AnimatePresence>\n        {current ? (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"pointer-events-none absolute inset-0 z-10 bg-background/50 bg-opacity-10 backdrop-blur-xl\"\n          />\n        ) : null}\n      </AnimatePresence>\n\n      <AnimatePresence>\n        {current ? (\n          <>\n            <div className=\"absolute inset-0 z-10 grid place-items-center\">\n              <motion.div\n                className=\"flex h-fit w-full max-w-xl cursor-pointer flex-col items-start gap-4 overflow-hidden rounded-md border bg-background p-4\"\n                ref={ref}\n                layoutId={`cardItem-${current.id}`}\n              >\n                <div className=\"flex w-full items-center gap-4\">\n                  <motion.div layoutId={`cardItemIcon-${current.id}`}>\n                    {current.icon}\n                  </motion.div>\n                  <div className=\"flex grow items-center justify-between\">\n                    <div className=\"flex w-full flex-col gap-0.5\">\n                      <div className=\"flex w-full flex-row justify-between gap-0.5\">\n                        <motion.div\n                          className=\"text-sm font-medium text-primary\"\n                          layoutId={`cardItemTitle-${current.id}`}\n                        >\n                          {current.title}\n                        </motion.div>\n                      </div>\n                      <motion.p\n                        layoutId={`cardItemSubtitle-${current.id}`}\n                        className=\"text-sm text-primary/70\"\n                      >\n                        {current.subtitle} / {current.description}\n                      </motion.p>\n                      <motion.div\n                        className=\"flex flex-row gap-2 text-xs text-primary/70\"\n                        layoutId={`cardItemMetadata-${current.id}`}\n                      >\n                        {current.metadata}\n                      </motion.div>\n                    </div>\n                  </div>\n                </div>\n                <motion.div\n                  layout\n                  initial={{ opacity: 0, filter: \"blur(5px)\" }}\n                  animate={{ opacity: 1, filter: \"blur(0px)\" }}\n                  transition={{\n                    duration: 0.3,\n                    ease: \"easeInOut\",\n                  }}\n                  exit={{\n                    opacity: 0,\n                    transition: { duration: 0.1 },\n                    filter: \"blur(3px)\",\n                  }}\n                  className=\"w-full text-sm text-primary/70\"\n                >\n                  {current.details}\n                </motion.div>\n              </motion.div>\n            </div>\n          </>\n        ) : null}\n      </AnimatePresence>\n\n      <div className={cn(\"relative flex items-start p-6\", className)}>\n        <div className=\"relative flex w-full flex-col items-center gap-4 px-2\">\n          {items.map((item) => (\n            <motion.div\n              layoutId={`cardItem-${item.id}`}\n              key={item.id}\n              initial={{ scale: 1 }}\n              whileHover={{ scale: 1.02 }}\n              className=\"flex w-full cursor-pointer flex-row items-center gap-4 rounded-md border bg-background p-2 shadow-md md:p-4\"\n              onClick={() => {\n                setCurrent(item);\n              }}\n            >\n              <motion.div layoutId={`cardItemIcon-${item.id}`}>\n                {item.icon}\n              </motion.div>\n              <div className=\"flex w-full flex-col items-start justify-between gap-0.5\">\n                <motion.div\n                  className=\"font-medium text-primary\"\n                  layoutId={`cardItemTitle-${item.id}`}\n                >\n                  {item.title}\n                </motion.div>\n                <motion.div\n                  className=\"text-xs text-primary/70\"\n                  layoutId={`cardItemSubtitle-${item.id}`}\n                >\n                  {item.subtitle} / {item.description}\n                </motion.div>\n                <motion.div\n                  className=\"flex flex-row gap-2 text-xs text-primary/70\"\n                  layoutId={`cardItemMetadata-${item.id}`}\n                >\n                  {item.metadata}\n                </motion.div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst useOutsideClick = (callback: () => void) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callback();\n      }\n    };\n\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  }, [callback]);\n\n  return ref;\n};",
      "type": "registry:ui",
      "target": "components/UIStudio/expandable-card.tsx"
    }
  ],
  "author": "shivashanker <hi@shivashanker.com/projects>",
  "title": "Expandable Card"
}
