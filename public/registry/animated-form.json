{
  "name": "animated-form",
  "type": "registry:ui",
  "files": [
    {
      "path": "components/UIStudio/animated-form.tsx",
      "content": "\"use client\";\n\nimport { IoMdCheckmark } from \"react-icons/io\";\nimport { FaGithub } from \"react-icons/fa6\";\nimport { motion } from \"motion/react\";\nimport { useEffect, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ntype AnimatedFormProps = {\n  delay?: number;\n  name?: string;\n};\n\nconst AnimatedForm = ({\n  delay = 7000,\n  name = \"Alex Morgan\",\n}: AnimatedFormProps) => {\n  const [animationKey, setAnimationKey] = useState(0);\n\n  const delayTime = Math.max(delay, 7000);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnimationKey((prev) => prev + 1);\n    }, delayTime);\n\n    return () => clearInterval(interval);\n  }, [delayTime]);\n\n  return <Animatedform key={animationKey} name={name} />;\n};\n\nexport default AnimatedForm;\n\nconst Animatedform = ({ name }: { name: string }) => {\n  const password = \"********\";\n  const circleLength = 2 * Math.PI * 50;\n\n  const nameAnimationDuration = Math.ceil(name.length / 5);\n  const passwordAnimationDuration = 2;\n  const nameStaggerDelay = nameAnimationDuration / name.length;\n  const passwordStaggerDelay = passwordAnimationDuration / password.length;\n\n  const icons = [\n    {\n      icon: <FaGithub className=\"size-6 text-primary\" />,\n      key: \"github\",\n    },\n    {\n      icon: <ShopifyIcon className=\"size-6\" />,\n      key: \"shopify\",\n    },\n    {\n      icon: <TwitchIcon className=\"size-6\" />,\n      key: \"twitch\",\n    },\n    {\n      icon: <YoutubeIcon className=\"size-6\" />,\n      key: \"youtube\",\n    },\n  ];\n\n  return (\n    <div className={cn(\"relative\", \"w-full max-w-[340px]\")}>\n      <div className=\"w-full rounded-[12px] border border-neutral-200/60 p-1.5 dark:border-neutral-900/60\">\n        <div\n          className={cn(\n            \"relative\",\n            \"flex flex-col gap-1 divide-y divide-neutral-200 rounded-lg\",\n            \"border border-neutral-200 dark:divide-neutral-900 dark:border-neutral-900\",\n          )}\n        >\n          <div\n            className={cn(\n              \"px-3 pb-2 pt-3 text-[14px] leading-[1rem] tracking-wide text-transparent\",\n              \"bg-gradient-to-r from-neutral-700 to-neutral-300 bg-clip-text dark:from-neutral-400 dark:to-neutral-700\",\n            )}\n          >\n            Create Account\n          </div>\n          <div className=\"flex flex-col gap-2 p-2\">\n            <div\n              className={cn(\n                \"w-full rounded-md border p-2\",\n                \"flex items-center justify-between gap-4\",\n                \"bg-gradient-to-r from-neutral-50 to-neutral-100 dark:from-neutral-900 dark:to-neutral-950\",\n              )}\n            >\n              <div className=\"text-xs\">\n                {name.split(\"\").map((char, index) => (\n                  <motion.span\n                    key={`name-${index}`}\n                    className=\"inline-block font-[350]\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{\n                      duration: 0.1,\n                      delay: index * nameStaggerDelay,\n                      ease: \"easeOut\",\n                    }}\n                  >\n                    {char === \" \" ? \"\\u00A0\" : char}\n                  </motion.span>\n                ))}\n              </div>\n\n              <AnimatedCheckmarkCircle\n                circleLength={circleLength}\n                strokeDuration={nameAnimationDuration * 3 + 1}\n                strokeDelay={0}\n                fillDelay={nameAnimationDuration + 0.1}\n                checkmarkDelay={nameAnimationDuration + 0.2}\n              />\n            </div>\n\n            <div\n              className={cn(\n                \"rounded-md border p-2\",\n                \"flex items-center justify-between gap-8\",\n                \"bg-gradient-to-r from-neutral-50 to-neutral-100 dark:from-neutral-900 dark:to-neutral-950\",\n              )}\n            >\n              <div className=\"font-mono text-xs\">\n                {password.split(\"\").map((char, index) => (\n                  <motion.span\n                    key={`password-${index}`}\n                    className=\"inline-block\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{\n                      duration: 0.1,\n                      delay:\n                        nameAnimationDuration +\n                        0.5 +\n                        index * passwordStaggerDelay,\n                      ease: \"easeOut\",\n                    }}\n                  >\n                    {char}\n                  </motion.span>\n                ))}\n              </div>\n\n              <AnimatedCheckmarkCircle\n                circleLength={circleLength}\n                strokeDuration={7}\n                strokeDelay={nameAnimationDuration + 0.5}\n                fillDelay={\n                  nameAnimationDuration + passwordAnimationDuration + 0.6\n                }\n                checkmarkDelay={\n                  nameAnimationDuration + passwordAnimationDuration + 0.7\n                }\n              />\n            </div>\n            <div\n              className={cn(\n                \"h-[37.6px] rounded-md border opacity-40\",\n                \"bg-gradient-to-r from-neutral-50 to-neutral-100 dark:from-neutral-900 dark:to-neutral-950\",\n              )}\n            />\n          </div>\n        </div>\n      </div>\n      <ContainerMask />\n      <div className=\"absolute bottom-0 left-0 flex h-[50px] w-full items-center justify-around px-6\">\n        {icons.map(({ icon, key }) => (\n          <div\n            key={key}\n            className=\"rounded-full bg-gradient-to-b from-neutral-300 to-neutral-100 p-2 dark:from-neutral-700 dark:to-neutral-900\"\n          >\n            {icon}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\ntype AnimatedCheckmarkCircleProps = {\n  circleLength: number;\n  strokeDuration: number;\n  strokeDelay: number;\n  fillDelay: number;\n  checkmarkDelay: number;\n};\n\nexport const AnimatedCheckmarkCircle = ({\n  circleLength,\n  strokeDuration,\n  strokeDelay,\n  fillDelay,\n  checkmarkDelay,\n}: AnimatedCheckmarkCircleProps) => {\n  return (\n    <div className=\"relative\">\n      <svg width=\"20\" height=\"20\" className=\"rotate-[-90deg]\">\n        <motion.circle\n          cx=\"10\"\n          cy=\"10\"\n          r=\"7\"\n          stroke=\"#22c55e\"\n          strokeWidth=\"2\"\n          fill=\"transparent\"\n          strokeDasharray={circleLength}\n          strokeDashoffset={circleLength}\n          animate={{ strokeDashoffset: 0 }}\n          transition={\n            {\n              duration: strokeDuration,\n              ease: \"easeInOut\",\n              delay: strokeDelay,\n            }\n          }\n        />\n        <motion.circle\n          cx=\"10\"\n          cy=\"10\"\n          r=\"7\"\n          fill=\"#22c55e\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={\n            {\n              duration: 0.2,\n              delay: fillDelay,\n            }\n          }\n        />\n      </svg>\n      <motion.div\n        className=\"absolute inset-0 flex items-center justify-center text-background\"\n        initial={{ opacity: 0, scale: 0 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={\n          {\n            duration: 0.2,\n            delay: checkmarkDelay,\n          }\n        }\n      >\n        <IoMdCheckmark className=\"size-2.5\" />\n      </motion.div>\n    </div>\n  );\n};\n\nconst ContainerMask = () => {\n  return (\n    <>\n      <div className=\"absolute bottom-0 left-0 h-[40px] w-full [background-image:linear-gradient(to_top,theme(colors.background)_60%,transparent_100%)]\" />\n      <div className=\"absolute bottom-0 left-0 h-[100px] w-[12px] [background-image:linear-gradient(to_top,theme(colors.background)_60%,transparent_100%)]\" />\n      <div className=\"absolute bottom-0 right-0 h-[100px] w-[12px] [background-image:linear-gradient(to_top,theme(colors.background)_60%,transparent_100%)]\" />\n    </>\n  );\n};\n\nconst ShopifyIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    width=\"256\"\n    height=\"292\"\n    viewBox=\"0 0 256 292\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMidYMid\"\n    fill=\"currentColor\"\n    {...props}\n  >\n    <path\n      d=\"M223.774 57.34c-.201-1.46-1.48-2.268-2.537-2.357-1.055-.088-23.383-1.743-23.383-1.743s-15.507-15.395-17.209-17.099c-1.703-1.703-5.029-1.185-6.32-.805-.19.056-3.388 1.043-8.678 2.68-5.18-14.906-14.322-28.604-30.405-28.604-.444 0-.901.018-1.358.044C129.31 3.407 123.644.779 118.75.779c-37.465 0-55.364 46.835-60.976 70.635-14.558 4.511-24.9 7.718-26.221 8.133-8.126 2.549-8.383 2.805-9.45 10.462C21.3 95.806.038 260.235.038 260.235l165.678 31.042 89.77-19.42S223.973 58.8 223.775 57.34zM156.49 40.848l-14.019 4.339c.005-.988.01-1.96.01-3.023 0-9.264-1.286-16.723-3.349-22.636 8.287 1.04 13.806 10.469 17.358 21.32zm-27.638-19.483c2.304 5.773 3.802 14.058 3.802 25.238 0 .572-.005 1.095-.01 1.624-9.117 2.824-19.024 5.89-28.953 8.966 5.575-21.516 16.025-31.908 25.161-35.828zm-11.131-10.537c1.617 0 3.246.549 4.805 1.622-12.007 5.65-24.877 19.88-30.312 48.297l-22.886 7.088C75.694 46.16 90.81 10.828 117.72 10.828z\"\n      fill=\"#95BF46\"\n    />\n    <path\n      d=\"M221.237 54.983c-1.055-.088-23.383-1.743-23.383-1.743s-15.507-15.395-17.209-17.099c-.637-.634-1.496-.959-2.394-1.099l-12.527 256.233 89.762-19.418S223.972 58.8 223.774 57.34c-.201-1.46-1.48-2.268-2.537-2.357\"\n      fill=\"#5E8E3E\"\n    />\n    <path\n      d=\"M135.242 104.585l-11.069 32.926s-9.698-5.176-21.586-5.176c-17.428 0-18.305 10.937-18.305 13.693 0 15.038 39.2 20.8 39.2 56.024 0 27.713-17.577 45.558-41.277 45.558-28.44 0-42.984-17.7-42.984-17.7l7.615-25.16s14.95 12.835 27.565 12.835c8.243 0 11.596-6.49 11.596-11.232 0-19.616-32.16-20.491-32.16-52.724 0-27.129 19.472-53.382 58.778-53.382 15.145 0 22.627 4.338 22.627 4.338\"\n      fill=\"#FFF\"\n    />\n  </svg>\n);\n\nconst TwitchIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 2400 2800\"\n    xmlSpace=\"preserve\"\n    fill=\"currentColor\"\n    {...props}\n  >\n    <path fill=\"#fff\" d=\"m2200 1300-400 400h-400l-350 350v-350H600V200h1600z\" />\n    <g fill=\"#9146ff\">\n      <path d=\"M500 0 0 500v1800h600v500l500-500h400l900-900V0H500zm1700 1300-400 400h-400l-350 350v-350H600V200h1600v1100z\" />\n      <path d=\"M1700 550h200v600h-200zm-550 0h200v600h-200z\" />\n    </g>\n  </svg>\n);\n\nconst YoutubeIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    viewBox=\"0 0 256 180\"\n    width={256}\n    height={180}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMidYMid\"\n    fill=\"currentColor\"\n    {...props}\n  >\n    <path\n      d=\"M250.346 28.075A32.18 32.18 0 0 0 227.69 5.418C207.824 0 127.87 0 127.87 0S47.912.164 28.046 5.582A32.18 32.18 0 0 0 5.39 28.24c-6.009 35.298-8.34 89.084.165 122.97a32.18 32.18 0 0 0 22.656 22.657c19.866 5.418 99.822 5.418 99.822 5.418s79.955 0 99.82-5.418a32.18 32.18 0 0 0 22.657-22.657c6.338-35.348 8.291-89.1-.164-123.134Z\"\n      fill=\"red\"\n    />\n    <path fill=\"#FFF\" d=\"m102.421 128.06 66.328-38.418-66.328-38.418z\" />\n  </svg>\n);\n",
      "type": "registry:ui",
      "target": "components/UIStudio/animated-form.tsx"
    }
  ],
  "author": "shivashanker <hi@shivashanker.com/projects>",
  "title": "Animated Form"
}
